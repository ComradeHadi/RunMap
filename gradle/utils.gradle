if(project.name == "app") {
    def sourceNativeLibDir = gradle.rootProject.rootDir.absolutePath + File.separator + "app" +
            File.separator + "src" + File.separator + "main" + File.separator + "libs" +
            File.separator + "armeabi-v7a"
    def destNativeLibDir = gradle.rootProject.rootDir.absolutePath + File.separator + "app" +
            File.separator + "libs" + File.separator + "armeabi-v7a"

    if (checkIfNeedCopylibs("libconfig.so", sourceNativeLibDir, destNativeLibDir)) {
        copyLibs("libconfig.so", sourceNativeLibDir, destNativeLibDir)
    }
}
else if(project.name == "logcatch"){
    disableDebugBuild();
}

def disableDebugBuild(){
    def targetTasks = project.tasks.findAll{task ->
        task.name.contains("Debug")
    }
    targetTasks.each{
        it.setEnabled false
    }
}

def copyLibs(libName, sourceDir, destDir) {
    def sourceFile = new File(sourceDir + File.separator + libName);
    def destFile = new File(destDir + File.separator + libName);
    destFile.withOutputStream { os ->
        sourceFile.withInputStream { ins ->
            os << ins
        }
    }
}
def checkIfNeedCopylibs(libName, sourceDir, destDir) {
    def sourceFile = new File(sourceDir + File.separator + libName);
    def destFile = new File(destDir + File.separator + libName);
    println sourceFile.absolutePath + " vs " + destFile.absolutePath
    if (!destFile.exists()) {
        return true;
    }
    return sourceFile.lastModified() > destFile.lastModified()
}